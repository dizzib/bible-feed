// Mocks generated by Mockito 5.4.6 from annotations
// in bible_feed/test/model/feeds_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bible_feed/model/feed.dart' as _i2;
import 'package:bible_feed/model/reading_list.dart' as _i4;
import 'package:bible_feed/service/feed_store_service.dart' as _i3;
import 'package:bible_feed/service/verse_scope_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFeedState_0 extends _i1.SmartFake implements _i2.FeedState {
  _FakeFeedState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FeedStoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeedStoreService extends _i1.Mock implements _i3.FeedStoreService {
  @override
  _i2.FeedState loadState(_i4.ReadingList? readingList) =>
      (super.noSuchMethod(
            Invocation.method(#loadState, [readingList]),
            returnValue: _FakeFeedState_0(
              this,
              Invocation.method(#loadState, [readingList]),
            ),
            returnValueForMissingStub: _FakeFeedState_0(
              this,
              Invocation.method(#loadState, [readingList]),
            ),
          )
          as _i2.FeedState);

  @override
  _i5.Future<dynamic> saveState(
    _i4.ReadingList? readingList,
    _i2.FeedState? state,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveState, [readingList, state]),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}

/// A class which mocks [VerseScopeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerseScopeService extends _i1.Mock implements _i6.VerseScopeService {
  @override
  int getNextVerse(_i2.FeedState? state) =>
      (super.noSuchMethod(
            Invocation.method(#getNextVerse, [state]),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  String getVerseScopeLabel(_i2.FeedState? state) =>
      (super.noSuchMethod(
            Invocation.method(#getVerseScopeLabel, [state]),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#getVerseScopeLabel, [state]),
            ),
            returnValueForMissingStub: _i7.dummyValue<String>(
              this,
              Invocation.method(#getVerseScopeLabel, [state]),
            ),
          )
          as String);
}
